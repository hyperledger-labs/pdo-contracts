{
    "$schema": "http://json-schema.org/schema#",
    "title": "PDO Credential Interface",
    "id": "http://tradenet.org/pdo-contracts/identity/credential#",

    "definitions": {
        "claim": {
            "//": "-----------------------------------------------------------------",
            "description": [
            ],
            "type": "object",
            "properties": {
                "subject": {
                    "description": [
                        "Identity of the subject of the credential, since all subjects",
                        "are contracts this will be assumed to be a contract id"
                    ],
                    "$ref": "#/pdo/identity/basetypes/identity",
                    "required": true
                },
                "claims": {
                    "description": [
                        "A list of objects that describe issued properties of the subject.",
                        "Each credential type will define and enforce a schema on the claims",
                        "specified in the credential"
                    ],
                    "type": "object",
                    "required": true
                }
            }
        },


        "proof": {
            "//": "-----------------------------------------------------------------",
            "description": [
            ],
            "type": "object",
            "properties": {
                "type": {
                    "description": [
                        "Verification method used in the proof.",
                        "Specifically intended to be the cryptographic verification system."
                    ],
                    "type": "string",
                    "enum": [
                        "ecdsa_secp384r1"
                    ],
                    "required": true
                },
                "created": {
                    "description": [
                        "This is the time when the proof was created.",
                        "TIME FIELD"
                    ],
                    "type": "datetime",
                    "required": false
                },
                "verificationMethod": {
                    "description": [
                        "Identity of the entity generating the proof and a contextualizing context path.",
                    ],
                    "$ref": "#/pdo/identity/basetypes/identity_key",
                    "required": true
                },
                "proofPurpose": {
                    "description": [
                        "Identifies what the proof claims.",
                        "For example, the proof may be that the claims match a schema."
                    ],
                    "type": "string",
                    "enum": [
                        "assertion",
                        "authentication",
                        "type-validation"
                    ],
                    "required": false
                },
                "proofValue": {
                    "description": [
                        "The cryptographic signature generated by the verification method."
                    ],
                    "$ref": "#/pdo/basetypes/ecdsa-signature",
                    "required": true
                }
            }
        },


        "credential": {
            "//": "-----------------------------------------------------------------",
            "description": [
            ],
            "type": "object",
            "properties": {
                "nonce": {
                    "description": [
                        "Base64 encoded random number used to mitigate replay attacks"
                    ],
                    "type": "string",
                    "length": 32,
                    "required": false
                },
                "type": {
                    "description": [
                        "List of identifiers for type objects"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minItems": 0,
                        "uniqueItems": true
                        "enum": [
                            "VerifiableCredential",
                            "verifiablePresentation"
                        ]
                    },
                    "required": false
                },
                "issuer": {
                    "description": [
                        "Identity of the issuer, since all issuers are contracts",
                        "this will be assumed to be a contract id"
                    ],
                    "$ref": "#/pdo/identity/basetypes/identity",
                    "required": true
                },
                "issuanceDate": {
                    "description": [
                        "This is the time when the credential was issued",
                        "TIME FIELD"
                    ],
                    "type": "datetime",
                    "required": false
                },
                "validFrom": {
                    "description": [
                        "This is the time when the credential begins to be valid",
                        "TIME FIELD"
                    ],
                    "type": "datetime",
                    "required": false
                },
                "expirationDate": {
                    "description": [
                        "This is the time after which the credential is no longe valid",
                        "TIME FIELD"
                    ],
                    "type": "datetime",
                    "required": false
                },
                "credentialSchema": {
                    "description": [
                        "URL identifier for the schema used by the claims in the credential",
                    ],
                    "type": "string",
                    "required": false
                },
                "credentialSubject": {
                    "description": [
                        "Specifies the claims",
                        "Strictly speaking, W3C allows claims about multiple subjects",
                        "but we are restricting the claims to a single subject."
                    ],
                    "$ref": "#/pdo/identity/claim",
                    "required": true
                }
            },
        },


        "verifiable-credential": {
            "//": "-----------------------------------------------------------------",
            "description": [
                "To avoid the need for common serialization of JSON objects,",
                "necessary for verifiable signatures, we are serializing the credential",
                "and then signing."
            ],
            "type": "object",
            "properties": {
                "serializedCredential": {
                    "description": [
                        "Serialized credential, when deserialized it will have",
                        "the #/pdo/identity/credential schema"
                    ],
                    "type": "string",
                    "format": "base64 urlsafe encoded, no padding"
                    "required": true
                },
                "proof": {
                    "description": [
                        "Proof of authenticity",
                    ],
                    "$ref": "#/pdo/identity/proof",
                    "required": true
                }
            },
        },


        "presentation": {
            "//": "-----------------------------------------------------------------",
            "description": [
                "A presentation is a collection of verifiable credentials that are",
                "presented to a verifier.",
                "The bundle of credentials is counter-signed by the holder/presenter."
            ],
            "type": "object",
            "properties": {
                "nonce": {
                    "description": [
                        "Base64 encoded random number used to mitigate replay attacks"
                    ],
                    "type": "string",
                    "length": 32,
                    "required": false
                },
                "holder": {
                    "description": [
                        "Identity of the holder, since all holders are contracts",
                        "this will be assumed to be a contract id"
                    ],
                    "$ref": "#/pdo/basetypes/identity",
                    "required": true
                },
                "verifiableCredential": {
                    "description": [
                        "A list of verifiable credentials.",
                        "Note that each element of the list is in serialized form."
                    ],
                    "type": "array",
                    "items": {
                        "$ref": "#/pdo/identity/verifiable-credential",
                        "minItems": 1,
                        "uniqueItems": true
                    }
                    "required": true
                }
            }
        },

        "verifiable-presentation": {
            "//": "-----------------------------------------------------------------",
            "description": [
                "To avoid the need for common serialization of JSON objects,",
                "necessary for verifiable signatures, we are serializing the presentation",
                "and then signing."
            ],
            "type": "object",
            "properties": {
                "serializedPresentation": {
                    "description": [
                        "Serialized presentation, when deserialized it will have",
                        "the #/pdo/identity/presentation schema"
                    ],
                    "type": "string",
                    "format": "base64 urlsafe encoded, no padding"
                    "required": true
                },
                "proof": {
                    "description": [
                        "Proof of authenticity",
                    ],
                    "$ref": "#/pdo/identity/basetypes/proof",
                    "required": true
                }
            }
        }
    }
}

// Local Variables:
// mode: hs-minor
// End:
