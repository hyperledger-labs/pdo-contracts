#! /usr/bin/env pdo-shell

## Copyright 2023 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## Two shell variables are used:
##    data -- the directory where the contract objects are stored
##    path -- the directory where the PSH scripts are stored
##
## $ pdo-shell -s create.psh -m path <contract path>

set --conditional -s home -v .
set --conditional -s data -v .
set --conditional -s save -v .
set --conditional -s _bin_ -v ${home}/contracts/identity/scripts

script -f ${_bin_}/init.psh

set -s _contract_ -v ${save}/identity.pdo
set -s _owner_ -v user1

trap_error

## =================================================================
echo ${HEADER} create the identity contract ${ENDC}
## =================================================================
identity -n ${_owner_}

contract create -c identity --source ${contracts}/_identity -f ${_contract_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to create the identity contract ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract initialize -w -f ${_contract_} \
    --description "this is a test identity"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to initialize the identity contract ${ENDC}
   exit -v ${_error_code_}
fi

## =================================================================
echo ${HEADER} test key creation, normal keys, these should succeed ${ENDC}
## =================================================================
identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test1 context" --fixed -p "test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test2 context" --fixed -p "test2"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test2 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test1.1 context" --fixed -p "test1" "test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test2.1 context" --fixed -p "test2" "test2.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test2 test2.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test3 extensible context" --extensible -p "test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save extensible signing context test3 ${ENDC}
   exit -v ${_error_code_}
fi

## =================================================================
echo ${HEADER} test key creation, hardened keys, these should succeed ${ENDC}
## =================================================================
identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "#test1 context" --fixed -p "#test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "#test2 context" --fixed -p "#test2"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test2 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "#test1.1 context" --fixed -p "#test1" "#test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "#test2.1 context" --fixed -p "#test2" "#test2.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save signing context test2 test2.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "#test3 extensible context" --extensible -p "#test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to save extensible signing context test3 ${ENDC}
   exit -v ${_error_code_}
fi

## =================================================================
echo ${HEADER} test key description, normal keys, these should succeed ${ENDC}
## =================================================================
identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch signing context test1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 KEY : ${_key_}

identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "test1" "test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch signing context test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 TEST1.1 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "test1" "test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 TEST1.1 KEY : ${_key_}

identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch extensible signing context test3 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST3 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test3 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST3 KEY : ${_key_}

## =================================================================
echo ${HEADER} test key description, hardened keys, these should succeed ${ENDC}
## =================================================================
identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "#test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch signing context test1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "#test1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 KEY : ${_key_}

identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "#test1" "#test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch signing context test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 TEST1.1 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "#test1" "#test1.1"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST1 TEST1.1 KEY : ${_key_}

identity_wallet_contract describe_signing_context -f ${_contract_} -s _description_ -p "#test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch extensible signing context test3 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST3 DESCRIPTION : ${_description_}

identity_wallet_contract get_verifying_key -f ${_contract_} -s _key_ -p "#test3"
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to fetch verifying key test3 ${ENDC}
   exit -v ${_error_code_}
fi
echo TEST3 KEY : ${_key_}

## =================================================================
echo ${HEADER} test key signing/verification, normal keys, these should succeed ${ENDC}
## =================================================================
echo Test simple key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test1 -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using signing context test1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p test1 -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

echo Test second level key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test1 test1.1 -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using signing context test1 test1.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p test1 test1.1 -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

echo Test extensible key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test3 test3.1 test3.1.1 -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using extensible context test3 test3.1 test3.1.1. ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p test3 test3.1 test3.1.1 -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

## =================================================================
echo ${HEADER} test key signing/verification, hardened keys, these should succeed ${ENDC}
## =================================================================
echo Test simple key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p '#test1' -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using signing context #test1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p '#test1' -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

echo Test second level key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p '#test1' '#test1.1' -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using signing context #test1 #test1.1 ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p '#test1' '#test1.1' -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

echo Test extensible key verification
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p '#test3' '#test3.1' '#test3.1.1' -m 'this is a test'
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to sign message using extensible context #test3 #test3.1 #test3.1.1. ${ENDC}
   exit -v ${_error_code_}
fi

identity_wallet_contract verify -f ${_contract_} -s _v_ -p '#test3' '#test3.1' '#test3.1.1' -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo ${ERROR} [Error ${_error_code_}] failed to verify signature ${ENDC}
   exit -v ${_error_code_}
fi
echo verified: ${_v_}

## =================================================================
echo ${HEADER} test key generate, these should generate errors ${ENDC}
## =================================================================
echo test registration below extensible path
identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test bad context" --fixed -p "test3" "test3.1"
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid signing context registration ${ENDC}
   exit -v -1
fi

echo test registration below non-existant context
identity_wallet_contract register_signing_context -w -f ${_contract_} \
    -d "test bad context" --fixed -p "test4" "test4.1"
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid signing context registration ${ENDC}
   exit -v -1
fi

## =================================================================
echo ${HEADER} test invalid signatures, these should generate errors ${ENDC}
## =================================================================
echo Test signature generation from non-existant signing context
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test4 -m 'this is a test'
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid signing context ${ENDC}
   exit -v -1
fi

echo Test verification from non-existant signing context
identity_wallet_contract verify -f ${_contract_} -s _v_ -p test4 -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid signing context ${ENDC}
   exit -v -1
fi

echo Test bad message verfication with valid key
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test1 -m 'this is a test'
identity_wallet_contract verify -f ${_contract_} -s _v_ -p test1 -m 'this is a not test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid message ${ENDC}
   exit -v -1
fi

echo Test bad signature verfication with valid key
identity_wallet_contract sign -f ${_contract_} -s _sig_ -p test1 -m 'this is a test'
identity_wallet_contract verify -f ${_contract_} -s _v_ -p test2 -m 'this is a test' --signature ${_sig_}
if -o ${_error_code_} 0
   echo error successfully caught
else
   echo ${ERROR} [Error ${_error_code_}] failed to catch invalid signature ${ENDC}
   exit -v -1
fi

exit
